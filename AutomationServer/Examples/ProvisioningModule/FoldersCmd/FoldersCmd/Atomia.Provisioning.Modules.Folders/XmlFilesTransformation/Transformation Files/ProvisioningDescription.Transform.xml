<provisioningDescription>
    <servicesDescription>	
        <simpleServiceList>
			<simpleService name="Folders" xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform" xdt:Transform="Remove" xdt:Locator="Match(name)" />			
            <simpleService name="Folders" friendlyName="Folders" providingModule="Atomia.Provisioning.Modules.CmdLocal.CmdLocal" xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform" xdt:Transform="Insert">
                <propertyList>
                    <property name="Id" friendlyName="Id of the instance, generated by module." defaultValue="123" />
                    <property name="Name" friendlyName="Folder Name" key="true" defaultValue="ChangeMe" />
                    <property name="Description" friendlyName="General description." defaultValue="Change this default description value" />
                    <property name="StdinStdout" friendlyName="Are commands going to accept and return JSON encoded service via stdin/stdout" defaultValue="false" required="true" />                    
                    <property name="UseCmdLinePlugin" friendlyName="Are commands going to use plugin command line app for provisioning" defaultValue="true" required="true" />
                    <property name="AddExecuteCmd" friendlyName="Command to be executed to add Folder, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="AddCommitCmd"  friendlyName="Command to be executed to add Folder, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="AddRollbackCmd" friendlyName="Command to be executed to add Folder, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="RemoveExecuteCmd" friendlyName="Command to be executed to remove Folder, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="RemoveCommitCmd" friendlyName="Command to be executed to remove Folder, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="RemoveRollbackCmd" friendlyName="Command to be executed to remove Folder, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="ModifyExecuteCmd" friendlyName="Command to be executed to modify Folder, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="ModifyCommitCmd" friendlyName="Command to be executed to modify Folder, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="ModifyRollbackCmd" friendlyName="Command to be executed to modify Folder, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --Description {service[Description]}" required="true" />
                    <property name="OperationMappingCmd" friendlyName="Define how opperations are executed" defaultValue="GetFullFolderPath:Atomia.Provisioning.Modules.Folders.exe --CallOp --RootFolder {resource[RootFolder]} --Name {service[Name]}" required="true" />
                </propertyList>
                <childServiceList>
                    <simpleService name="Files" friendlyName="Files">
                        <propertyList>
                            <property name="Id" friendlyName="Id" defaultValue="123"/>
                            <property name="Name" friendlyName="Name" defaultValue="TestFile.txt" key="true"/>
                            <property name="ParentFolder" friendlyName="Parent folder" key="true" defaultValue="WillTakeValueFromParentService"/>
                            <property name="Content" friendlyName="File content" defaultValue="123"/>
                            <property name="TestChangesPropagation" friendlyName="TestChangesPropagation" defaultValue=""/>
                            <property name="StdinStdout" friendlyName="Is command going to accept and return JSON encoded service via stdin/stdout" defaultValue="false" required="true" />
                            <property name="UseCmdLinePlugin" friendlyName="Are commands going to use plugin command line app for provisioning" defaultValue="true" required="true" />
                            <property name="AddExecuteCmd" friendlyName="Command to be executed to add File, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="AddCommitCmd"  friendlyName="Command to be executed to add File, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="AddRollbackCmd" friendlyName="Command to be executed to add File, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Add --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="RemoveExecuteCmd" friendlyName="Command to be executed to remove File, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="RemoveCommitCmd" friendlyName="Command to be executed to remove File, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="RemoveRollbackCmd" friendlyName="Command to be executed to remove File, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Remove --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="ModifyExecuteCmd" friendlyName="Command to be executed to modify File, begin transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="ModifyCommitCmd" friendlyName="Command to be executed to modify File, commit transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="ModifyRollbackCmd" friendlyName="Command to be executed to modify File, rollback transaction" defaultValue="Atomia.Provisioning.Modules.Folders.exe --Modify --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[parent.Name]} --Content {service[Content]}" required="true" />
                            <property name="OperationMappingCmd" friendlyName="Define how opperations are executed" defaultValue="GetFullFilePath:Atomia.Provisioning.Modules.Folders.exe --CallOp --RootFolder {resource[RootFolder]} --Name {service[Name]} --ParentFolder {service[ParentFolder]}" required="true" />
                        </propertyList>
                    </simpleService>
                    <simpleService name="FilesWithoutPlugin" friendlyName="Files service, where files are provisioned without command line plugin application. Direct command line commands are used.">
                        <propertyList>
                            <property name="Id" friendlyName="Id" defaultValue="123"/>
                            <property name="Name" friendlyName="Name" defaultValue="TestFile.txt" key="true"/>
                            <property name="ParentFolder" friendlyName="Parent folder" key="true" defaultValue="WillTakeValueFromParentService"/>
                            <property name="Content" friendlyName="File content" defaultValue="123"/>
                            <property name="StdinStdout" friendlyName="Is command going to accept and return JSON encoded service via stdin/stdout" defaultValue="false" required="true" />
                            <property name="UseCmdLinePlugin" friendlyName="Are commands going to use plugin command line app for provisioning" defaultValue="false" required="true" />
                            <property name="AddExecuteCmd" friendlyName="Command to be executed to add File, begin transaction" defaultValue="echo '{service[Content]}' > {resource[RootFolder]}{service[parent.Name]}\{service[Name]}" required="true" />
                            <property name="AddCommitCmd"  friendlyName="Command to be executed to add File, commit transaction" defaultValue="" required="false" />
                            <property name="AddRollbackCmd" friendlyName="Command to be executed to add File, rollback transaction" defaultValue="del {resource[RootFolder]}{service[parent.Name]}\{service[Name]}" required="true" />
                            <property name="RemoveExecuteCmd" friendlyName="Command to be executed to remove File, begin transaction" defaultValue="ren {resource[RootFolder]}{service[parent.Name]}\{service[Name]} {service[Name]}_MarkedForDelete" required="true" />
                            <property name="RemoveCommitCmd" friendlyName="Command to be executed to remove File, commit transaction" defaultValue="del {resource[RootFolder]}{service[parent.Name]}\{service[Name]}_MarkedForDelete" required="true" />
                            <property name="RemoveRollbackCmd" friendlyName="Command to be executed to remove File, rollback transaction" defaultValue="ren {resource[RootFolder]}{service[parent.Name]}\{service[Name]}_MarkedForDelete {service[Name]}" required="true" />
                            <property name="ModifyExecuteCmd" friendlyName="Command to be executed to modify File, begin transaction" defaultValue="ren {resource[RootFolder]}{oldservice[parent.Name]}\{oldservice[Name]} {newservice[Name]}" required="true" />
                            <property name="ModifyCommitCmd" friendlyName="Command to be executed to modify File, commit transaction" defaultValue="" required="false" />
                            <property name="ModifyRollbackCmd" friendlyName="Command to be executed to modify File, rollback transaction" defaultValue="ren {resource[RootFolder]}{newservice[parent.Name]}\{newservice[Name]} {oldservice[Name]}" required="true" />
                            <property name="OperationMappingCmd" friendlyName="Define how opperations are executed" defaultValue="GetFullFilePath:echo {resource[RootFolder]}{service[parent.Name]}\{service[Name]}" required="true" />
                        </propertyList>
                    </simpleService>
                </childServiceList>
            </simpleService>
        </simpleServiceList>
    </servicesDescription>	
	<packageDescription>
    <packageList>
      <package name="BasePackage" xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform" xdt:Transform="Replace" xdt:Locator="Match(name)">
        <serviceList>
          <service name="Folders"/>
        </serviceList>
        <serviceLimitationList>
          <globalLimitation>
            <group maxCount="100">
              <service name="Folders" />
            </group>            
          </globalLimitation>
        </serviceLimitationList>
      </package>
    </packageList>
  </packageDescription>
  
</provisioningDescription>
